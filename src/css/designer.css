.canvas {
  font-size: 12px;
  font-family: Arial, Helvetica, sans-serif;
  cursor: default;
}

.controls-layer {
  display: none;
}

.component .main-element:hover,
.component .main-element:focus,
.component .main-element.selected {
  outline: dotted 1px red;
  /* TODO: Fix hardcoded value */
  outline-offset: 0;
}

.shape .main-element {
  fill: #ffffff;
  stroke: #000000;
  stroke-width: 1;
}

.shape.cant-connect > * {
  cursor: no-drop;
}

.shape.draggable:not(.cant-connect) .main-element,
.controls-layer .connection-handler.draggable {
  cursor: grab;
}

.shape.draggable.grabbing:not(.cant-connect) .main-element,
.controls-layer .connection-handler.draggable.grabbing {
  cursor: grabbing;
}

.component.connection.dragging {
  opacity: 0.3;
}

.component.connection .path {
  fill: none;
  stroke: black;
  stroke-width: 1px;
}

.component.connection .arrow {
  fill: black;
}

.controls-layer.active {
  display: initial;
}

.controls-layer .handler-resize-nwse {
  cursor: nwse-resize;
}

.controls-layer .handler-resize-ns {
  cursor: ns-resize;
}

.controls-layer .handler-resize-nesw {
  cursor: nesw-resize;
}

.controls-layer .handler-resize-ew {
  cursor: ew-resize;
}

.controls-layer .handler-resize-ew {
  cursor: ew-resize;
}

.controls-layer .handler-resize-nesw {
  cursor: nesw-resize;
}

.controls-layer .handler-resize-ns {
  cursor: ns-resize;
}

.controls-layer .handler-resize-nwse {
  cursor: nwse-resize;
}

.shape-text-input {
  transform: translate(-50px, -15px);
}

.shape-text-input input {
  width: 100%;
  height: 100%;
  border: 1px solid black;
  box-sizing: border-box;
  text-align: center;
}
